name: together-core-api CI workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

env:
  DB_HOST: ${{secrets.DB_HOST}}
  DB_PORT: ${{secrets.DB_PORT}}
  DB_USERNAME: ${{secrets.DB_USERNAME}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_NAME: ${{secrets.DB_NAME}}
  COGNITO_APP_CLIENT_ID: ${{secrets.COGNITO_APP_CLIENT_ID}}
  COGNITO_USER_POOL_ID: ${{secrets.COGNITO_USER_POOL_ID}}
  COGNITO_ENDPOINT: ${{secrets.COGNITO_ENDPOINT}}
      
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: NPM or Yarn install with caching
        uses: bahmutov/npm-install@v1.6.0

      - name: Build
        run: |
          npm run lint
          npm run format
          npm run build
          npm run test:cov
          
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: ./coverage/lcov.info
          minimum-coverage: 50
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Store coverage folder as artifact for deploy
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  sonarqube:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Downloads build as artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: coverage
          path: coverage

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}